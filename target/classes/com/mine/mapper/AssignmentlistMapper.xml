<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mine.mapper.AssignmentlistMapper">

  <resultMap id="BaseResultMap" type="com.mine.bean.Assignmentlist">
    <constructor>
      <idArg column="subId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="subDate" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="idenCode" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="document" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  
  	<!-- 查询所有提交作业 -->
  	<select id="getAllAssignment" resultType="Assignmentlist">
  		select * from assignmentlist
	</select>
	
	<!-- 查询所有指定标识码的提交作业 -->
  	<select id="getTheAssignment" parameterType="String" resultType="Assignmentlist">
  		select * from assignmentlist where idenCode = #{idenCode}
	</select>
	
	<!-- 修改更新考核状态 -->
  	<update id="updateReview">
  		update assignmentlist set review = #{review} where subId = #{subId} 
	</update>
	
	<!--【另解】再标签insert中，设置属性useGeneratedKeys="true" keyProperty="subId"  -->
	<insert id="myInsertTest" parameterType="Assignmentlist">
		<!-- keyProperty：将查询到的主键值设置到parameterType对象的哪个属性中 -->  
        <!-- order：SELECT LAST_INSERT_ID()语句的执行顺序（相对于insert语句来说的执行顺序） -->  
        <!-- resultType：指定SELECT LAST_INSERT_ID()语句的结果类型 -->  
        <selectKey keyProperty="subId" order="AFTER" resultType="java.lang.Integer">  
            <!-- SELECT LAST_INSERT_ID()：得到刚insert到数据表中的记录的主键值，只适用于自增主键 -->  
            SELECT LAST_INSERT_ID()  
        </selectKey> 
	    insert into assignmentlist (sID, sName, subDate, idenCode, document, review)
    	values (#{sid}, #{sname}, #{subDate}, #{idenCode}, #{document}, #{review})
	</insert>  
	
	<!-- 按照主键subId查询作业： -->
  	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	    select 
	    <include refid="Base_Column_List" />
	    from assignmentlist
	    where subId = #{subId,jdbcType=INTEGER}
  	</select>
  	
  	<!--   6.按照主键删除某个作业： -->
   <delete id="deleteByExample" parameterType="com.mine.bean.AssignmentlistExample">
	    delete from assignmentlist
	    <if test="_parameter != null">
	      <include refid="Example_Where_Clause" />
	    </if>
   </delete>
   
   <!--  7.按照主键删除某些作业： -->
   <!-- 批量删除 -->
	<delete id="deleteByPrimaryKeyList" parameterType="java.util.List">
		<!-- delete from emp where empno in(7789,7790) -->
		<!-- forEach : 用来循环 collection : 用来指定循环的数据的类型 可以填的值有：array,list,map item 
			: 循环中为每个循环的数据指定一个别名 index : 循环中循环的下标 open : 开始 close : 结束 separator : 数组中元素之间的分隔符 -->
		delete from assignmentlist where subId in
		<foreach item="id" collection="list" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    subId, sID, sName, subDate, idenCode, document
  </sql>
  <select id="selectByExample" parameterType="com.mine.bean.AssignmentlistExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from assignmentlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from assignmentlist
    where subId = #{subId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.mine.bean.Assignmentlist">
    insert into assignmentlist (subId, sID, sName, 
      subDate, idenCode, document
      )
    values (#{subId,jdbcType=INTEGER}, #{sid,jdbcType=VARCHAR}, #{sname,jdbcType=VARCHAR}, 
      #{subDate,jdbcType=TIMESTAMP}, #{idenCode,jdbcType=VARCHAR}, #{document,jdbcType=VARCHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="Assignmentlist"
  		  useGeneratedKeys="true" keyProperty="subId">
    insert into assignmentlist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subId != null">
        subId,
      </if>
      <if test="sid != null">
        sID,
      </if>
      <if test="sname != null">
        sName,
      </if>
      <if test="subDate != null">
        subDate,
      </if>
      <if test="idenCode != null">
        idenCode,
      </if>
      <if test="document != null">
        document,
      </if>
      <if test="review != null">
        review,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subId != null">
        #{subId,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="subDate != null">
        #{subDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idenCode != null">
        #{idenCode,jdbcType=VARCHAR},
      </if>
      <if test="document != null">
        #{document,jdbcType=VARCHAR},
      </if>
      <if test="review != null">
        #{review,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.mine.bean.AssignmentlistExample" resultType="java.lang.Long">
    select count(*) from assignmentlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update assignmentlist
    <set>
      <if test="record.subId != null">
        subId = #{record.subId,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null">
        sID = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.sname != null">
        sName = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.subDate != null">
        subDate = #{record.subDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.idenCode != null">
        idenCode = #{record.idenCode,jdbcType=VARCHAR},
      </if>
      <if test="record.document != null">
        document = #{record.document,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExample" parameterType="map">
    update assignmentlist
    set subId = #{record.subId,jdbcType=INTEGER},
      sID = #{record.sid,jdbcType=VARCHAR},
      sName = #{record.sname,jdbcType=VARCHAR},
      subDate = #{record.subDate,jdbcType=TIMESTAMP},
      idenCode = #{record.idenCode,jdbcType=VARCHAR},
      document = #{record.document,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mine.bean.Assignmentlist">
    update assignmentlist
    <set>
      <if test="sid != null">
        sID = #{sid,jdbcType=VARCHAR},
      </if>
      <if test="sname != null">
        sName = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="subDate != null">
        subDate = #{subDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idenCode != null">
        idenCode = #{idenCode,jdbcType=VARCHAR},
      </if>
      <if test="document != null">
        document = #{document,jdbcType=VARCHAR},
      </if>
    </set>
    where subId = #{subId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mine.bean.Assignmentlist">
    update assignmentlist
    set sID = #{sid,jdbcType=VARCHAR},
      sName = #{sname,jdbcType=VARCHAR},
      subDate = #{subDate,jdbcType=TIMESTAMP},
      idenCode = #{idenCode,jdbcType=VARCHAR},
      document = #{document,jdbcType=VARCHAR}
    where subId = #{subId,jdbcType=INTEGER}
  </update>
</mapper>