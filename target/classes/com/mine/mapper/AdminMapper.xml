<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace表示命名空间，java代码调用时，通过namespace来确定是哪一个mapper，防止名字重复 -->
<!-- 【动态代理开发】时：namespace=接口所在的全包名。 -->
<mapper namespace="com.mine.mapper.AdminMapper">
  
  	<!-- 根据id查询用户  【201-202/301】-->
	<!-- id="selectAdminByID"：此查询语句的名字，java代码里面便于寻找 -->
	<!-- parameterType:查询条件aId的类型. resultType:查询结果的类型. -->
	<!-- 设置了类型别名所以可以用Admin直接替换com.mine.bean.Admin -->
	<select id="selectAdminByID" parameterType="Integer" resultType="Admin"> 
		 select * from admin where aId = #{id}  <!-- //sql语句，？占位符用#{变量} 来代替，精准查询用“=” -->
	</select>
	
	<select id="selectAdminByAP" parameterType="Admin" resultType="Admin"> 
		 select * from admin where adminName = #{adminName} and password = #{password}<!-- //sql语句，？占位符用#{变量} 来代替，精准查询用“=” -->
	</select>
	
	<!-- 使用对象进行查询时：#{变量名} 的变量名需与对象中的属性名一致！！！！！！ -->
	<select id="selectAdminByAP2" parameterType="Admin" resultType="Admin"> 
		 select * from admin where adminName = #{adminName} and password = #{password}<!-- //sql语句，？占位符用#{变量} 来代替，精准查询用“=” -->
	</select>
	
	<select id="isExistAdmin" parameterType="String" resultType="Admin"> 
		 select * from admin where adminName = #{name}  <!-- //sql语句，？占位符用#{变量} 来代替，精准查询用“=” -->
	</select>
	
	
  <resultMap id="BaseResultMap" type="com.mine.bean.Admin">
    <constructor>
      <idArg column="aId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="adminName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    aId, adminName, password
  </sql>
  <select id="selectByExample" parameterType="com.mine.bean.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where aId = #{aId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where aId = #{aId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mine.bean.AdminExample">
    delete from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mine.bean.Admin">
    insert into admin (aId, adminName, password
      )
    values (#{aId,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mine.bean.Admin">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aId != null">
        aId,
      </if>
      <if test="adminName != null">
        adminName,
      </if>
      <if test="password != null">
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aId != null">
        #{aId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mine.bean.AdminExample" resultType="java.lang.Long">
    select count(*) from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin
    <set>
      <if test="record.aId != null">
        aId = #{record.aId,jdbcType=INTEGER},
      </if>
      <if test="record.adminName != null">
        adminName = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin
    set aId = #{record.aId,jdbcType=INTEGER},
      adminName = #{record.adminName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mine.bean.Admin">
    update admin
    <set>
      <if test="adminName != null">
        adminName = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where aId = #{aId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mine.bean.Admin">
    update admin
    set adminName = #{adminName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where aId = #{aId,jdbcType=INTEGER}
  </update>
</mapper>